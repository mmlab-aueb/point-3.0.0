require(blackadder);

globalconf::GlobalConf(TYPE FW, MODE mac, NODEID snap0003,
DEFAULTRV 0000000000000000000100010000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
DEFAULTFromRV 0000000000000100000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000,
TMFID     0000000000000000000100010000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
iLID      0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000);

localRV::LocalRV(globalconf);
netlink::Netlink();
tonetlink::ToNetlink(netlink);
fromnetlink::FromNetlink(netlink);
contr_r::ControlReliability(globalconf, false);
tomgmnetlink::ToMGMNetlink(netlink);
frommgmnetlink::FromMGMNetlink(netlink);

proxy::LocalProxy(globalconf);

fw::Forwarder(globalconf,1,
1,00:00:00:00:00:11,00:00:00:00:00:07,0x080a,0000000000000000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000);

tsf0::ThreadSafeQueue(1000);
fromdev0::FromDevice(snap3-eth0, METHOD LINUX);
todev0::ToDevice(snap3-eth0);


proxy[0]->tonetlink;
fromnetlink->[0]proxy;
proxy[3]->tomgmnetlink;
frommgmnetlink->[3]proxy;
localRV[0]->[1]proxy[1]->[0]localRV;
proxy[2]-> [0]contr_r[0] -> [0]fw[0] -> [1]contr_r[1] -> [2]proxy;

classifier0::Classifier(0/000000000011 12/080a);
fw[1]->tsf0->todev0;
fromdev0->classifier0[0]->[1]fw;
